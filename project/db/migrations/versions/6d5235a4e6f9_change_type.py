"""change_type

Revision ID: 6d5235a4e6f9
Revises: 
Create Date: 2024-08-11 12:27:12.341293

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6d5235a4e6f9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat_storage',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('chat_id', sa.UUID(), nullable=False),
    sa.Column('sender', sa.TEXT(), nullable=False),
    sa.Column('message', sa.TEXT(), nullable=False),
    sa.Column('dt_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('grade', sa.INTEGER(), nullable=True),
    sa.Column('accuracy', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__chat_storage')),
    sa.UniqueConstraint('id', name=op.f('uq__chat_storage__id'))
    )
    op.create_index(op.f('ix__chat_storage__dt_created'), 'chat_storage', ['dt_created'], unique=False)
    op.create_table('tg_users',
    sa.Column('tg_user', sa.INTEGER(), nullable=False),
    sa.Column('back_user', sa.UUID(), nullable=True),
    sa.PrimaryKeyConstraint('tg_user', name=op.f('pk__tg_users')),
    sa.UniqueConstraint('back_user', name=op.f('uq__tg_users__back_user')),
    sa.UniqueConstraint('tg_user', name=op.f('uq__tg_users__tg_user'))
    )
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('state', sa.TEXT(), nullable=False),
    sa.Column('chat_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=True),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk__users')),
    sa.UniqueConstraint('chat_id', name=op.f('uq__users__chat_id')),
    sa.UniqueConstraint('user_id', name=op.f('uq__users__user_id'))
    )
    op.create_index(op.f('ix__users__state'), 'users', ['state'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix__users__state'), table_name='users')
    op.drop_table('users')
    op.drop_table('tg_users')
    op.drop_index(op.f('ix__chat_storage__dt_created'), table_name='chat_storage')
    op.drop_table('chat_storage')
    # ### end Alembic commands ###
